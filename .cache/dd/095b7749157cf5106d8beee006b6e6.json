{"id":"node_modules/opencv-build/build/utils.js","dependencies":[{"name":"/Users/ronerlih/development/tensorflow-hand-mirror-node/package.json","includedInParent":true,"mtime":1601675144339},{"name":"/Users/ronerlih/development/tensorflow-hand-mirror-node/.babelrc","includedInParent":true,"mtime":1599428702971},{"name":"/Users/ronerlih/development/tensorflow-hand-mirror-node/node_modules/opencv-build/package.json","includedInParent":true,"mtime":1601674933833},{"name":"child_process","loc":{"line":39,"column":28},"parent":"/Users/ronerlih/development/tensorflow-hand-mirror-node/node_modules/opencv-build/build/utils.js","resolved":"/Users/ronerlih/development/tensorflow-hand-mirror-node/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"fs","loc":{"line":40,"column":17},"parent":"/Users/ronerlih/development/tensorflow-hand-mirror-node/node_modules/opencv-build/build/utils.js","resolved":"/Users/ronerlih/development/tensorflow-hand-mirror-node/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"path","loc":{"line":41,"column":19},"parent":"/Users/ronerlih/development/tensorflow-hand-mirror-node/node_modules/opencv-build/build/utils.js","resolved":"/Users/ronerlih/development/tensorflow-hand-mirror-node/node_modules/path-browserify/index.js"},{"name":"npmlog","loc":{"line":42,"column":18},"parent":"/Users/ronerlih/development/tensorflow-hand-mirror-node/node_modules/opencv-build/build/utils.js","resolved":"/Users/ronerlih/development/tensorflow-hand-mirror-node/node_modules/npmlog/log.js"},{"name":"process","parent":"/Users/ronerlih/development/tensorflow-hand-mirror-node/node_modules/opencv-build/build/utils.js","resolved":"/Users/ronerlih/development/tensorflow-hand-mirror-node/node_modules/process/browser.js"}],"generated":{"js":"var process = require(\"process\");\n\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar child_process = require(\"child_process\");\r\nvar fs = require(\"fs\");\r\nvar path = require(\"path\");\r\nvar log = require('npmlog');\r\nfunction exec(cmd, options) {\r\n    log.silly('install', 'executing:', cmd);\r\n    return new Promise(function (resolve, reject) {\r\n        child_process.exec(cmd, options, function (err, stdout, stderr) {\r\n            var _err = err || stderr;\r\n            if (_err)\r\n                return reject(_err);\r\n            return resolve(stdout.toString());\r\n        });\r\n    });\r\n}\r\nexports.exec = exec;\r\nfunction execFile(cmd, args, options) {\r\n    log.silly('install', 'executing:', cmd, args);\r\n    return new Promise(function (resolve, reject) {\r\n        var child = child_process.execFile(cmd, args, options, function (err, stdout, stderr) {\r\n            var _err = err || stderr;\r\n            if (_err)\r\n                return reject(_err);\r\n            return resolve(stdout.toString());\r\n        });\r\n        child.stdin && child.stdin.end();\r\n    });\r\n}\r\nexports.execFile = execFile;\r\nfunction spawn(cmd, args, options) {\r\n    log.silly('install', 'spawning:', cmd, args);\r\n    return new Promise(function (resolve, reject) {\r\n        try {\r\n            var child = child_process.spawn(cmd, args, Object.assign({}, { stdio: 'inherit' }, options));\r\n            child.on('exit', function (code) {\r\n                if (typeof code !== 'number') {\r\n                    code = null;\r\n                }\r\n                var msg = 'child process exited with code ' + code + ' (for more info, set \\'--loglevel silly\\')';\r\n                if (code !== 0) {\r\n                    return reject(msg);\r\n                }\r\n                return resolve(msg);\r\n            });\r\n        }\r\n        catch (err) {\r\n            return reject(err);\r\n        }\r\n    });\r\n}\r\nexports.spawn = spawn;\r\nfunction requireCmd(cmd, hint) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var stdout, err_1, errMessage;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    log.info('install', \"executing: \" + cmd);\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, 3, , 4]);\r\n                    return [4 /*yield*/, exec(cmd)];\r\n                case 2:\r\n                    stdout = _a.sent();\r\n                    log.info('install', cmd + \": \" + stdout);\r\n                    return [3 /*break*/, 4];\r\n                case 3:\r\n                    err_1 = _a.sent();\r\n                    errMessage = \"failed to execute \" + cmd + \", \" + hint + \", error is: \" + err_1.toString();\r\n                    throw new Error(errMessage);\r\n                case 4: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction requireGit() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, requireCmd('git --version', 'git is required')];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nexports.requireGit = requireGit;\r\nfunction requireCmake() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, requireCmd('cmake --version', 'cmake is required to build opencv')];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nexports.requireCmake = requireCmake;\r\nfunction isWin() {\r\n    return process.platform == 'win32';\r\n}\r\nexports.isWin = isWin;\r\nfunction isOSX() {\r\n    return process.platform == 'darwin';\r\n}\r\nexports.isOSX = isOSX;\r\nfunction isUnix() {\r\n    return !isWin() && !isOSX();\r\n}\r\nexports.isUnix = isUnix;\r\nfunction isCudaAvailable() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var err_2, cudaVersionFilePath, content;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    log.info('install', 'Check if CUDA is available & what version...');\r\n                    if (!isWin()) return [3 /*break*/, 4];\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, 3, , 4]);\r\n                    return [4 /*yield*/, requireCmd('nvcc --version', 'CUDA availability check')];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [2 /*return*/, true];\r\n                case 3:\r\n                    err_2 = _a.sent();\r\n                    log.info('install', 'Seems like CUDA is not installed.');\r\n                    return [2 /*return*/, false];\r\n                case 4:\r\n                    cudaVersionFilePath = path.resolve('/usr/local/cuda/version.txt');\r\n                    if (fs.existsSync(cudaVersionFilePath)) {\r\n                        content = fs.readFileSync(cudaVersionFilePath, 'utf8');\r\n                        log.info('install', content);\r\n                        return [2 /*return*/, true];\r\n                    }\r\n                    else {\r\n                        log.info('install', 'CUDA version file could not be found.');\r\n                        return [2 /*return*/, false];\r\n                    }\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nexports.isCudaAvailable = isCudaAvailable;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/opencv-build/build/utils.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/opencv-build/build/utils.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}}],"sources":{"node_modules/opencv-build/build/utils.js":"\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar child_process = require(\"child_process\");\r\nvar fs = require(\"fs\");\r\nvar path = require(\"path\");\r\nvar log = require('npmlog');\r\nfunction exec(cmd, options) {\r\n    log.silly('install', 'executing:', cmd);\r\n    return new Promise(function (resolve, reject) {\r\n        child_process.exec(cmd, options, function (err, stdout, stderr) {\r\n            var _err = err || stderr;\r\n            if (_err)\r\n                return reject(_err);\r\n            return resolve(stdout.toString());\r\n        });\r\n    });\r\n}\r\nexports.exec = exec;\r\nfunction execFile(cmd, args, options) {\r\n    log.silly('install', 'executing:', cmd, args);\r\n    return new Promise(function (resolve, reject) {\r\n        var child = child_process.execFile(cmd, args, options, function (err, stdout, stderr) {\r\n            var _err = err || stderr;\r\n            if (_err)\r\n                return reject(_err);\r\n            return resolve(stdout.toString());\r\n        });\r\n        child.stdin && child.stdin.end();\r\n    });\r\n}\r\nexports.execFile = execFile;\r\nfunction spawn(cmd, args, options) {\r\n    log.silly('install', 'spawning:', cmd, args);\r\n    return new Promise(function (resolve, reject) {\r\n        try {\r\n            var child = child_process.spawn(cmd, args, Object.assign({}, { stdio: 'inherit' }, options));\r\n            child.on('exit', function (code) {\r\n                if (typeof code !== 'number') {\r\n                    code = null;\r\n                }\r\n                var msg = 'child process exited with code ' + code + ' (for more info, set \\'--loglevel silly\\')';\r\n                if (code !== 0) {\r\n                    return reject(msg);\r\n                }\r\n                return resolve(msg);\r\n            });\r\n        }\r\n        catch (err) {\r\n            return reject(err);\r\n        }\r\n    });\r\n}\r\nexports.spawn = spawn;\r\nfunction requireCmd(cmd, hint) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var stdout, err_1, errMessage;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    log.info('install', \"executing: \" + cmd);\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, 3, , 4]);\r\n                    return [4 /*yield*/, exec(cmd)];\r\n                case 2:\r\n                    stdout = _a.sent();\r\n                    log.info('install', cmd + \": \" + stdout);\r\n                    return [3 /*break*/, 4];\r\n                case 3:\r\n                    err_1 = _a.sent();\r\n                    errMessage = \"failed to execute \" + cmd + \", \" + hint + \", error is: \" + err_1.toString();\r\n                    throw new Error(errMessage);\r\n                case 4: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction requireGit() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, requireCmd('git --version', 'git is required')];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nexports.requireGit = requireGit;\r\nfunction requireCmake() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, requireCmd('cmake --version', 'cmake is required to build opencv')];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nexports.requireCmake = requireCmake;\r\nfunction isWin() {\r\n    return process.platform == 'win32';\r\n}\r\nexports.isWin = isWin;\r\nfunction isOSX() {\r\n    return process.platform == 'darwin';\r\n}\r\nexports.isOSX = isOSX;\r\nfunction isUnix() {\r\n    return !isWin() && !isOSX();\r\n}\r\nexports.isUnix = isUnix;\r\nfunction isCudaAvailable() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var err_2, cudaVersionFilePath, content;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    log.info('install', 'Check if CUDA is available & what version...');\r\n                    if (!isWin()) return [3 /*break*/, 4];\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, 3, , 4]);\r\n                    return [4 /*yield*/, requireCmd('nvcc --version', 'CUDA availability check')];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [2 /*return*/, true];\r\n                case 3:\r\n                    err_2 = _a.sent();\r\n                    log.info('install', 'Seems like CUDA is not installed.');\r\n                    return [2 /*return*/, false];\r\n                case 4:\r\n                    cudaVersionFilePath = path.resolve('/usr/local/cuda/version.txt');\r\n                    if (fs.existsSync(cudaVersionFilePath)) {\r\n                        content = fs.readFileSync(cudaVersionFilePath, 'utf8');\r\n                        log.info('install', content);\r\n                        return [2 /*return*/, true];\r\n                    }\r\n                    else {\r\n                        log.info('install', 'CUDA version file could not be found.');\r\n                        return [2 /*return*/, false];\r\n                    }\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nexports.isCudaAvailable = isCudaAvailable;\r\n"},"lineCount":189}},"error":null,"hash":"fc380628565a835c66648545af806087","cacheData":{"env":{}}}