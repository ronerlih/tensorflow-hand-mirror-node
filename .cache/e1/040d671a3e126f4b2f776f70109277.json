{"id":"node_modules/vptree/vptree.js","dependencies":[{"name":"/Users/ronerlih/development/tensorflow-hand-mirror-node/package.json","includedInParent":true,"mtime":1599520138964},{"name":"/Users/ronerlih/development/tensorflow-hand-mirror-node/.babelrc","includedInParent":true,"mtime":1599428702971},{"name":"/Users/ronerlih/development/tensorflow-hand-mirror-node/node_modules/vptree/package.json","includedInParent":true,"mtime":1599520138703}],"generated":{"js":"var define;\n/*╔═════════════════════════════════════════════════════════════════════════════════════════════════════════╗\n *║                                                                                                         ║\n *║      vptree.js v0.1.1                                                                                   ║\n *║      https://github.com/fpirsch/vptree.js                                                               ║\n *║                                                                                                         ║\n *║      A javascript implementation of the Vantage-Point Tree algorithm                                    ║\n *║      ISC license (http://opensource.org/licenses/ISC). François Pirsch. 2013.                           ║\n *║                                                                                                         ║\n *║      Date: 2013-09-21T20:03Z                                                                            ║\n *║                                                                                                         ║\n *╚═════════════════════════════════════════════════════════════════════════════════════════════════════════╝\n */\n\"use strict\";\n\n//https://github.com/umdjs/umd/blob/master/commonjsStrictGlobal.js\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(['exports'], function (exports) {\n            factory(root.VPTreeFactory = exports);\n        });\n    } else if (typeof exports === 'object') {\n        // CommonJS\n        factory(exports);\n    } else {\n        // Browser globals\n        factory(root.VPTreeFactory = {});\n    }\n}(this, function (exports) {\n\n\t/*───────────────────────────────────────────────────────────────────────────┐\n\t │   Selection/partition algorithm                                           │\n\t └───────────────────────────────────────────────────────────────────────────*/\n\n\tfunction partition(list, left, right, pivotIndex, comp) {\n\t\tvar pivotValue = list[pivotIndex];\n\t\tvar swap = list[pivotIndex];\t// Move pivot to end\n\t\tlist[pivotIndex] = list[right];\n\t\tlist[right] = swap;\n\t\tvar storeIndex = left;\n\t\tfor(var i = left; i < right; i++) {\n\t\t\tif(comp(list[i], pivotValue)) {\n\t\t\t\tswap = list[storeIndex];\n\t\t\t\tlist[storeIndex] = list[i];\n\t\t\t\tlist[i] = swap;\n\t\t\t\tstoreIndex++;\n\t\t\t}\n\t\t}\n\t\tswap = list[right];\t\t\t\t// Move pivot to its final place\n\t\tlist[right] = list[storeIndex];\n\t\tlist[storeIndex] = swap;\n\t\treturn storeIndex;\n\t}\n\n\t// Pivot selection : computes the median of elements a, b and c of the list,\n\t// according to comparator comp.\n\tfunction medianOf3(list, a, b, c, comp) {\n\t\tvar A = list[a], B = list[b], C = list[c];\n\t\treturn comp (A, B)\n\t\t\t? comp (B, C) ? b : comp (A, C) ? c : a\n\t\t\t: comp (A, C) ? a : comp (B, C) ? c : b;\n\t}\n\n\t/**\n\t * Quickselect : Finds the nth smallest number in a list according to comparator comp.\n\t * All elements smaller than the nth element are moved to its left (in no particular order),\n\t * and all elements greater thant the nth are moved to its right.\n\t *\n\t * The funny mix of 0-based and 1-based indexes comes from the C++\n\t * Standard Library function nth_element.\n\t *\n\t * @param {Array} list the list to partition\n\t * @param {int} left index in the list of the first element of the sublist.\n\t * @param {int} right index in the list of the last element of the sublist (inclusive)\n\t * @param {int} nth index, in the range [1, sublist.length] of the elemnt to find.\n\t * @param {function} comp a comparator, i.e. a boolean function accepting two parameters a and b,\n\t *        and returning true if a < b and false if a >= b.\n\t *\n\t * See http://en.wikipedia.org/wiki/Quickselect\n\t * And /include/bits/stl_algo.h in the GCC Standard Library ( http://gcc.gnu.org/libstdc++/ )\n\t */\n\tfunction nth_element(list, left, nth, right, comp) {\n\t\tif(nth <= 0 || nth > (right-left+1)) throw \"VPTree.nth_element: nth must be in range [1, right-left+1] (nth=\"+nth+\")\";\n\t\tvar pivotIndex, pivotNewIndex, pivotDist;\n\t\tfor(;;) {\n\t\t\t// select pivotIndex between left and right\n\t\t\tpivotIndex = medianOf3(list, left, right, (left + right) >> 1, comp);\n\t\t\tpivotNewIndex = partition(list, left, right, pivotIndex, comp);\n\t\t\tpivotDist = pivotNewIndex - left + 1;\n\t\t\tif(pivotDist === nth) {\n\t\t\t\treturn list[pivotNewIndex];\n\t\t\t}\n\t\t\telse if(nth < pivotDist) {\n\t\t\t\tright = pivotNewIndex - 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnth -= pivotDist;\n\t\t\t\tleft = pivotNewIndex + 1;\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Wrapper around nth_element with a 0-based index.\n\t */\n\tfunction select(list, k, comp) {\n\t\tif(k < 0 || k >= list.length) throw \"VPTree.select: k must be in range [0, list.length-1] (k=\"+k+\")\";\n\t\treturn nth_element(list, 0, k+1, list.length-1, comp);\n\t}\n\n\n\t/*───────────────────────────────────────────────────────────────────────────┐\n\t │   vp-tree creation                                                        │\n\t └───────────────────────────────────────────────────────────────────────────*/\n\t/** Selects a vantage point in a set.\n\t *  We trivially pick one at random.\n\t *  TODO this could be improved by random sampling to maximize spread.\n\t */\n\tfunction selectVPIndex(list) {\n\t\treturn Math.floor(Math.random() * list.length);\n\t}\n\n\tvar distanceComparator = function(a, b) { return a.dist < b.dist; }\n\n\t/**\n\t * Builds and returns a vp-tree from the list S.\n\t * @param {Array} S array of objects to structure into a vp-tree.\n\t * @param {function} distance a function returning the distance between 2 ojects from the list S.\n\t * @param {number} nb (maximum) bucket size. 0 or undefined = no buckets used.\n\t * @return {object} vp-tree.\n\t */\n\tfunction buildVPTree(S, distance, nb) {\n\t\tvar list = [];\n\t\tfor(var i = 0, n = S.length; i < n; i++) {\n\t\t\tlist[i] = {\n\t\t\t\ti: i\n\t\t\t\t//hist: []\t\t// unused (yet)\n\t\t\t};\n\t\t};\n\n\t\tvar tree = recurseVPTree(S, list, distance, nb);\n\t\treturn new VPTree(S, distance, tree);\n\t}\n\n\tfunction recurseVPTree(S, list, distance, nb) {\n\t\tif(list.length === 0) return null;\n\n\t\t// Is this a leaf node ?\n\t\tvar listLength = list.length;\n\t\tif(nb > 0 && listLength <= nb) {\n\t\t\tvar bucket = [];\n\t\t\tfor(var i = 0; i < listLength; i++) {\n\t\t\t\tbucket[i] = list[i].i;\n\t\t\t}\n\t\t\treturn bucket;\n\t\t}\n\n\t\t// Non-leaf node.\n\t\t// Constructs a node with the selected vantage point extracted from the set.\n\t\tvar vpIndex = selectVPIndex(list),\n\t\t\tnode = list[vpIndex];\n\t\tlist.splice(vpIndex, 1);\n\t\tlistLength--;\n\t\t// We can't use this information yet, so don't show it in the vp-tree output.\n\t\tdelete node.dist;\n\t\tif(listLength === 0) return node;\n\n\t\t// Adds to each item its distance to the vantage point.\n\t\t// This ensures each distance is computed only once.\n\t\tvar vp = S[node.i],\n\t\t\tdmin = Infinity,\n\t\t\tdmax = 0,\n\t\t\titem,\n\t\t\tdist;\n\t\tfor(var i = 0, n = listLength; i < n; i++) {\n\t\t\titem = list[i];\n\t\t\tdist = distance(vp, S[item.i]);\n\t\t\titem.dist = dist;\n\t\t\t//item.hist.push(dist);\t// unused (yet)\n\t\t\tif(dmin > dist) dmin = dist;\n\t\t\tif(dmax < dist) dmax = dist;\n\t\t}\n\t\tnode.m = dmin;\n\t\tnode.M = dmax;\n\n\t\t// Partitions the set around the median distance.\n\t\tvar medianIndex = listLength >> 1,\n\t\t\tmedian = select(list, medianIndex, distanceComparator);\n\n\t\t// Recursively builds vp-trees with the 2 resulting subsets.\n\t\tvar leftItems = list.splice(0, medianIndex),\n\t\t\trightItems = list;\n\t\tnode.μ = median.dist;\n\t\tnode.L = recurseVPTree(S, leftItems, distance, nb);\n\t\tnode.R = recurseVPTree(S, rightItems, distance, nb);\n\t\treturn node;\n\t}\n\n\n\t/** Stringifies a vp-tree data structure.\n\t *  JSON without the null nodes and the quotes around object keys, to save space.\n\t */\n\tfunction stringify(root) {\n\t\tvar stack = [root || this.tree], s = '';\n\t\twhile(stack.length) {\n\t\t\tvar node = stack.pop();\n\n\t\t\t// Happens if the bucket size is greater thant the dataset.\n\t\t\tif(node.length) return '['+node.join(',')+']';\n\n\t\t\ts += '{i:' + node.i;\n\t\t\tif(node.hasOwnProperty('m')) {\n\t\t\t\ts += ',m:' + node.m + ',M:' + node.M + ',μ:' + node.μ;\n\t\t\t}\n\t\t\tif(node.hasOwnProperty('b')) {\n\t\t\t\ts += ',b:[' + node.b + ']';\n\t\t\t}\n\t\t\tif(node.hasOwnProperty('L')) {\n\t\t\t\tvar L = node.L;\n\t\t\t\tif(L) {\n\t\t\t\t\ts += ',L:';\n\t\t\t\t\tif(L.length) s += '[' + L + ']';\n\t\t\t\t\telse s += stringify(L);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(node.hasOwnProperty('R')) {\n\t\t\t\tvar R = node.R;\n\t\t\t\tif(R) {\n\t\t\t\t\ts += ',R:';\n\t\t\t\t\tif(R.length) s += '[' + R + ']';\n\t\t\t\t\telse s += stringify(R);\n\t\t\t\t}\n\t\t\t}\n\t\t\ts += '}';\n\t\t}\n\t\treturn s;\n\t}\n\n\t/*───────────────────────────────────────────────────────────────────────────┐\n\t │   Build Public API                                                        │\n\t └───────────────────────────────────────────────────────────────────────────*/\n\n\texports.select = select;\n\texports.build = buildVPTree;\n\n\n\t/*───────────────────────────────────────────────────────────────────────────┐\n\t │   Priority Queue, used to store search results.                           │\n\t └───────────────────────────────────────────────────────────────────────────*/\n\n\t/**\n\t * @constructor\n\t * @class PriorityQueue manages a queue of elements with priorities.\n\t *\n\t * @param {number} size maximum size of the queue (default = 5). Only lowest priority items will be retained.\n\t */\n\tfunction PriorityQueue(size) {\n\t\tsize = size || 5;\n\t\tvar contents = [];\n\n\t\tfunction binaryIndexOf(priority) {\n\t\t\tvar minIndex = 0,\n\t\t\t\tmaxIndex = contents.length - 1,\n\t\t\t\tcurrentIndex,\n\t\t\t\tcurrentElement;\n\n\t\t\twhile (minIndex <= maxIndex) {\n\t\t\t\tcurrentIndex = (minIndex + maxIndex) >> 1;\n\t\t\t\tcurrentElement = contents[currentIndex].priority;\n\t\t\t\t \n\t\t\t\tif (currentElement < priority) {\n\t\t\t\t\tminIndex = currentIndex + 1;\n\t\t\t\t}\n\t\t\t\telse if (currentElement > priority) {\n\t\t\t\t\tmaxIndex = currentIndex - 1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn currentIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn -1 - minIndex;\n\t\t}\n\n\t\tvar api = {\n\t\t\t// This breaks IE8 compatibility. Who cares ?\n\t\t\tget length() {\n\t\t\t\treturn contents.length;\n\t\t\t},\n\n\t\t\tinsert: function(data, priority) {\n\t\t\t\tvar index = binaryIndexOf(priority);\n\t\t\t\tif(index < 0) index = -1 - index;\n\t\t\t\tif(index < size) {\n\t\t\t\t\tcontents.splice(index, 0, {data: data, priority: priority});\n\t\t\t\t\tif(contents.length > size) {\n\t\t\t\t\t\tcontents.length--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn contents.length === size ? contents[contents.length-1].priority : Infinity;\n\t\t\t},\n\n\t\t\tlist: function() {\n\t\t\t\treturn contents.map(function(item){ return {i: item.data, d: item.priority}; });\n\t\t\t}\n\t\t};\n\n\t\treturn api;\n\t};\n\n\n\t/*───────────────────────────────────────────────────────────────────────────┐\n\t │   vp-tree search                                                          │\n\t └───────────────────────────────────────────────────────────────────────────*/\n\n\t/**\n\t * @param {Object} q query : any object the distance function can be applied to.\n\t * @param {number} n number of nearest neighbors to find (default = 1)\n\t *\n\t * @return {Array<Object>} list of search results, ordered by increasing distance to the query object.\n\t *\t\t\t\t\t\tEach result has a property i which is the index of the element in S, and d which\n\t *\t\t\t\t\t\tis its distance to the query object.\n\t */\n\tfunction searchVPTree(q, n) {\n\t\tn = n || 1;\n\t\tvar W = new PriorityQueue(n),\n\t\t\tτ = Infinity,\n\t\t\tS = this.S,\n\t\t\tdistance = this.distance,\n\t\t\tcomparisons = 0;\n\n\t\tfunction doSearch(node) {\n\t\t\tif(node === null) return;\n\n\t\t\t// Leaf node : test each element in this node's bucket.\n\t\t\tif(node.length) {\n\t\t\t\tfor(var i = 0, n = node.length; i < n; i++) {\n\t\t\t\t\tcomparisons++;\n\t\t\t\t\tvar elementID = node[i],\n\t\t\t\t\t\telement = S[elementID],\n\t\t\t\t\t\telementDist = distance(q, element);\n\t\t\t\t\tif(elementDist < τ) {\n\t\t\t\t\t\tτ = W.insert(elementID, elementDist);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Non-leaf node\n\t\t\tvar id = node.i,\n\t\t\t\tp = S[id],\n\t\t\t\tdist = distance(q, p);\n\n\t\t\tcomparisons++;\n\n\t\t\t// This vantage-point is close enough to q.\n\t\t\tif(dist < τ) {\n\t\t\t\tτ = W.insert(id, dist);\n\t\t\t}\n\n\t\t\t// The order of exploration is determined by comparison with μ.\n\t\t\t// The sooner we find elements close to q, the smaller τ and the more nodes we skip.\n\t\t\t// P. Yianilos uses the middle of left/right bounds instead of μ.\n\t\t\tvar μ = node.μ, L = node.L, R = node.R;\n\t\t\tif(μ === undefined) return;\n\t\t\tif(dist < μ) {\n\t\t\t\tif(L && node.m - τ < dist) doSearch(L);\n\t\t\t\tif(R && μ - τ < dist && dist < node.M + τ) doSearch(R);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(R && dist < node.M + τ) doSearch(R);\n\t\t\t\tif(L && node.m - τ < dist && dist < μ + τ) doSearch(L);\n\t\t\t}\n\t\t}\n\n\t\tdoSearch(this.tree);\n\t\tthis.comparisons = comparisons;\n\t\treturn W.list();\n\t}\n\n\n\n\t/*───────────────────────────────────────────────────────────────────────────┐\n\t │   vp-tree constructor                                                     │\n\t └───────────────────────────────────────────────────────────────────────────*/\n\n\t/**\n\t * @constructor\n\t * @class VPTree manages a vp-tree.\n\t *\n\t * @param {Array} S the initial set of elements\n\t * @param {Function} distance the distance function\n\t * @param {Object} the vp-tree structure\n\t */\n\tfunction VPTree(S, distance, tree) {\n\t\tthis.S = S;\n\t\tthis.distance = distance;\n\t\tthis.tree = tree;\n\n\t\tthis.search = searchVPTree;\n\t\tthis.comparisons = 0;\n\t\tthis.stringify = stringify;\n\t}\n\n\n\texports.load = function(S, distance, tree) {\n\t\treturn new VPTree(S, distance, tree);\n\t}\n}));\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/vptree/vptree.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/vptree/vptree.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}}],"sources":{"node_modules/vptree/vptree.js":"/*╔═════════════════════════════════════════════════════════════════════════════════════════════════════════╗\n *║                                                                                                         ║\n *║      vptree.js v0.1.1                                                                                   ║\n *║      https://github.com/fpirsch/vptree.js                                                               ║\n *║                                                                                                         ║\n *║      A javascript implementation of the Vantage-Point Tree algorithm                                    ║\n *║      ISC license (http://opensource.org/licenses/ISC). François Pirsch. 2013.                           ║\n *║                                                                                                         ║\n *║      Date: 2013-09-21T20:03Z                                                                            ║\n *║                                                                                                         ║\n *╚═════════════════════════════════════════════════════════════════════════════════════════════════════════╝\n */\n\"use strict\";\n\n//https://github.com/umdjs/umd/blob/master/commonjsStrictGlobal.js\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(['exports'], function (exports) {\n            factory(root.VPTreeFactory = exports);\n        });\n    } else if (typeof exports === 'object') {\n        // CommonJS\n        factory(exports);\n    } else {\n        // Browser globals\n        factory(root.VPTreeFactory = {});\n    }\n}(this, function (exports) {\n\n\t/*───────────────────────────────────────────────────────────────────────────┐\n\t │   Selection/partition algorithm                                           │\n\t └───────────────────────────────────────────────────────────────────────────*/\n\n\tfunction partition(list, left, right, pivotIndex, comp) {\n\t\tvar pivotValue = list[pivotIndex];\n\t\tvar swap = list[pivotIndex];\t// Move pivot to end\n\t\tlist[pivotIndex] = list[right];\n\t\tlist[right] = swap;\n\t\tvar storeIndex = left;\n\t\tfor(var i = left; i < right; i++) {\n\t\t\tif(comp(list[i], pivotValue)) {\n\t\t\t\tswap = list[storeIndex];\n\t\t\t\tlist[storeIndex] = list[i];\n\t\t\t\tlist[i] = swap;\n\t\t\t\tstoreIndex++;\n\t\t\t}\n\t\t}\n\t\tswap = list[right];\t\t\t\t// Move pivot to its final place\n\t\tlist[right] = list[storeIndex];\n\t\tlist[storeIndex] = swap;\n\t\treturn storeIndex;\n\t}\n\n\t// Pivot selection : computes the median of elements a, b and c of the list,\n\t// according to comparator comp.\n\tfunction medianOf3(list, a, b, c, comp) {\n\t\tvar A = list[a], B = list[b], C = list[c];\n\t\treturn comp (A, B)\n\t\t\t? comp (B, C) ? b : comp (A, C) ? c : a\n\t\t\t: comp (A, C) ? a : comp (B, C) ? c : b;\n\t}\n\n\t/**\n\t * Quickselect : Finds the nth smallest number in a list according to comparator comp.\n\t * All elements smaller than the nth element are moved to its left (in no particular order),\n\t * and all elements greater thant the nth are moved to its right.\n\t *\n\t * The funny mix of 0-based and 1-based indexes comes from the C++\n\t * Standard Library function nth_element.\n\t *\n\t * @param {Array} list the list to partition\n\t * @param {int} left index in the list of the first element of the sublist.\n\t * @param {int} right index in the list of the last element of the sublist (inclusive)\n\t * @param {int} nth index, in the range [1, sublist.length] of the elemnt to find.\n\t * @param {function} comp a comparator, i.e. a boolean function accepting two parameters a and b,\n\t *        and returning true if a < b and false if a >= b.\n\t *\n\t * See http://en.wikipedia.org/wiki/Quickselect\n\t * And /include/bits/stl_algo.h in the GCC Standard Library ( http://gcc.gnu.org/libstdc++/ )\n\t */\n\tfunction nth_element(list, left, nth, right, comp) {\n\t\tif(nth <= 0 || nth > (right-left+1)) throw \"VPTree.nth_element: nth must be in range [1, right-left+1] (nth=\"+nth+\")\";\n\t\tvar pivotIndex, pivotNewIndex, pivotDist;\n\t\tfor(;;) {\n\t\t\t// select pivotIndex between left and right\n\t\t\tpivotIndex = medianOf3(list, left, right, (left + right) >> 1, comp);\n\t\t\tpivotNewIndex = partition(list, left, right, pivotIndex, comp);\n\t\t\tpivotDist = pivotNewIndex - left + 1;\n\t\t\tif(pivotDist === nth) {\n\t\t\t\treturn list[pivotNewIndex];\n\t\t\t}\n\t\t\telse if(nth < pivotDist) {\n\t\t\t\tright = pivotNewIndex - 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnth -= pivotDist;\n\t\t\t\tleft = pivotNewIndex + 1;\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Wrapper around nth_element with a 0-based index.\n\t */\n\tfunction select(list, k, comp) {\n\t\tif(k < 0 || k >= list.length) throw \"VPTree.select: k must be in range [0, list.length-1] (k=\"+k+\")\";\n\t\treturn nth_element(list, 0, k+1, list.length-1, comp);\n\t}\n\n\n\t/*───────────────────────────────────────────────────────────────────────────┐\n\t │   vp-tree creation                                                        │\n\t └───────────────────────────────────────────────────────────────────────────*/\n\t/** Selects a vantage point in a set.\n\t *  We trivially pick one at random.\n\t *  TODO this could be improved by random sampling to maximize spread.\n\t */\n\tfunction selectVPIndex(list) {\n\t\treturn Math.floor(Math.random() * list.length);\n\t}\n\n\tvar distanceComparator = function(a, b) { return a.dist < b.dist; }\n\n\t/**\n\t * Builds and returns a vp-tree from the list S.\n\t * @param {Array} S array of objects to structure into a vp-tree.\n\t * @param {function} distance a function returning the distance between 2 ojects from the list S.\n\t * @param {number} nb (maximum) bucket size. 0 or undefined = no buckets used.\n\t * @return {object} vp-tree.\n\t */\n\tfunction buildVPTree(S, distance, nb) {\n\t\tvar list = [];\n\t\tfor(var i = 0, n = S.length; i < n; i++) {\n\t\t\tlist[i] = {\n\t\t\t\ti: i\n\t\t\t\t//hist: []\t\t// unused (yet)\n\t\t\t};\n\t\t};\n\n\t\tvar tree = recurseVPTree(S, list, distance, nb);\n\t\treturn new VPTree(S, distance, tree);\n\t}\n\n\tfunction recurseVPTree(S, list, distance, nb) {\n\t\tif(list.length === 0) return null;\n\n\t\t// Is this a leaf node ?\n\t\tvar listLength = list.length;\n\t\tif(nb > 0 && listLength <= nb) {\n\t\t\tvar bucket = [];\n\t\t\tfor(var i = 0; i < listLength; i++) {\n\t\t\t\tbucket[i] = list[i].i;\n\t\t\t}\n\t\t\treturn bucket;\n\t\t}\n\n\t\t// Non-leaf node.\n\t\t// Constructs a node with the selected vantage point extracted from the set.\n\t\tvar vpIndex = selectVPIndex(list),\n\t\t\tnode = list[vpIndex];\n\t\tlist.splice(vpIndex, 1);\n\t\tlistLength--;\n\t\t// We can't use this information yet, so don't show it in the vp-tree output.\n\t\tdelete node.dist;\n\t\tif(listLength === 0) return node;\n\n\t\t// Adds to each item its distance to the vantage point.\n\t\t// This ensures each distance is computed only once.\n\t\tvar vp = S[node.i],\n\t\t\tdmin = Infinity,\n\t\t\tdmax = 0,\n\t\t\titem,\n\t\t\tdist;\n\t\tfor(var i = 0, n = listLength; i < n; i++) {\n\t\t\titem = list[i];\n\t\t\tdist = distance(vp, S[item.i]);\n\t\t\titem.dist = dist;\n\t\t\t//item.hist.push(dist);\t// unused (yet)\n\t\t\tif(dmin > dist) dmin = dist;\n\t\t\tif(dmax < dist) dmax = dist;\n\t\t}\n\t\tnode.m = dmin;\n\t\tnode.M = dmax;\n\n\t\t// Partitions the set around the median distance.\n\t\tvar medianIndex = listLength >> 1,\n\t\t\tmedian = select(list, medianIndex, distanceComparator);\n\n\t\t// Recursively builds vp-trees with the 2 resulting subsets.\n\t\tvar leftItems = list.splice(0, medianIndex),\n\t\t\trightItems = list;\n\t\tnode.μ = median.dist;\n\t\tnode.L = recurseVPTree(S, leftItems, distance, nb);\n\t\tnode.R = recurseVPTree(S, rightItems, distance, nb);\n\t\treturn node;\n\t}\n\n\n\t/** Stringifies a vp-tree data structure.\n\t *  JSON without the null nodes and the quotes around object keys, to save space.\n\t */\n\tfunction stringify(root) {\n\t\tvar stack = [root || this.tree], s = '';\n\t\twhile(stack.length) {\n\t\t\tvar node = stack.pop();\n\n\t\t\t// Happens if the bucket size is greater thant the dataset.\n\t\t\tif(node.length) return '['+node.join(',')+']';\n\n\t\t\ts += '{i:' + node.i;\n\t\t\tif(node.hasOwnProperty('m')) {\n\t\t\t\ts += ',m:' + node.m + ',M:' + node.M + ',μ:' + node.μ;\n\t\t\t}\n\t\t\tif(node.hasOwnProperty('b')) {\n\t\t\t\ts += ',b:[' + node.b + ']';\n\t\t\t}\n\t\t\tif(node.hasOwnProperty('L')) {\n\t\t\t\tvar L = node.L;\n\t\t\t\tif(L) {\n\t\t\t\t\ts += ',L:';\n\t\t\t\t\tif(L.length) s += '[' + L + ']';\n\t\t\t\t\telse s += stringify(L);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(node.hasOwnProperty('R')) {\n\t\t\t\tvar R = node.R;\n\t\t\t\tif(R) {\n\t\t\t\t\ts += ',R:';\n\t\t\t\t\tif(R.length) s += '[' + R + ']';\n\t\t\t\t\telse s += stringify(R);\n\t\t\t\t}\n\t\t\t}\n\t\t\ts += '}';\n\t\t}\n\t\treturn s;\n\t}\n\n\t/*───────────────────────────────────────────────────────────────────────────┐\n\t │   Build Public API                                                        │\n\t └───────────────────────────────────────────────────────────────────────────*/\n\n\texports.select = select;\n\texports.build = buildVPTree;\n\n\n\t/*───────────────────────────────────────────────────────────────────────────┐\n\t │   Priority Queue, used to store search results.                           │\n\t └───────────────────────────────────────────────────────────────────────────*/\n\n\t/**\n\t * @constructor\n\t * @class PriorityQueue manages a queue of elements with priorities.\n\t *\n\t * @param {number} size maximum size of the queue (default = 5). Only lowest priority items will be retained.\n\t */\n\tfunction PriorityQueue(size) {\n\t\tsize = size || 5;\n\t\tvar contents = [];\n\n\t\tfunction binaryIndexOf(priority) {\n\t\t\tvar minIndex = 0,\n\t\t\t\tmaxIndex = contents.length - 1,\n\t\t\t\tcurrentIndex,\n\t\t\t\tcurrentElement;\n\n\t\t\twhile (minIndex <= maxIndex) {\n\t\t\t\tcurrentIndex = (minIndex + maxIndex) >> 1;\n\t\t\t\tcurrentElement = contents[currentIndex].priority;\n\t\t\t\t \n\t\t\t\tif (currentElement < priority) {\n\t\t\t\t\tminIndex = currentIndex + 1;\n\t\t\t\t}\n\t\t\t\telse if (currentElement > priority) {\n\t\t\t\t\tmaxIndex = currentIndex - 1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn currentIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn -1 - minIndex;\n\t\t}\n\n\t\tvar api = {\n\t\t\t// This breaks IE8 compatibility. Who cares ?\n\t\t\tget length() {\n\t\t\t\treturn contents.length;\n\t\t\t},\n\n\t\t\tinsert: function(data, priority) {\n\t\t\t\tvar index = binaryIndexOf(priority);\n\t\t\t\tif(index < 0) index = -1 - index;\n\t\t\t\tif(index < size) {\n\t\t\t\t\tcontents.splice(index, 0, {data: data, priority: priority});\n\t\t\t\t\tif(contents.length > size) {\n\t\t\t\t\t\tcontents.length--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn contents.length === size ? contents[contents.length-1].priority : Infinity;\n\t\t\t},\n\n\t\t\tlist: function() {\n\t\t\t\treturn contents.map(function(item){ return {i: item.data, d: item.priority}; });\n\t\t\t}\n\t\t};\n\n\t\treturn api;\n\t};\n\n\n\t/*───────────────────────────────────────────────────────────────────────────┐\n\t │   vp-tree search                                                          │\n\t └───────────────────────────────────────────────────────────────────────────*/\n\n\t/**\n\t * @param {Object} q query : any object the distance function can be applied to.\n\t * @param {number} n number of nearest neighbors to find (default = 1)\n\t *\n\t * @return {Array<Object>} list of search results, ordered by increasing distance to the query object.\n\t *\t\t\t\t\t\tEach result has a property i which is the index of the element in S, and d which\n\t *\t\t\t\t\t\tis its distance to the query object.\n\t */\n\tfunction searchVPTree(q, n) {\n\t\tn = n || 1;\n\t\tvar W = new PriorityQueue(n),\n\t\t\tτ = Infinity,\n\t\t\tS = this.S,\n\t\t\tdistance = this.distance,\n\t\t\tcomparisons = 0;\n\n\t\tfunction doSearch(node) {\n\t\t\tif(node === null) return;\n\n\t\t\t// Leaf node : test each element in this node's bucket.\n\t\t\tif(node.length) {\n\t\t\t\tfor(var i = 0, n = node.length; i < n; i++) {\n\t\t\t\t\tcomparisons++;\n\t\t\t\t\tvar elementID = node[i],\n\t\t\t\t\t\telement = S[elementID],\n\t\t\t\t\t\telementDist = distance(q, element);\n\t\t\t\t\tif(elementDist < τ) {\n\t\t\t\t\t\tτ = W.insert(elementID, elementDist);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Non-leaf node\n\t\t\tvar id = node.i,\n\t\t\t\tp = S[id],\n\t\t\t\tdist = distance(q, p);\n\n\t\t\tcomparisons++;\n\n\t\t\t// This vantage-point is close enough to q.\n\t\t\tif(dist < τ) {\n\t\t\t\tτ = W.insert(id, dist);\n\t\t\t}\n\n\t\t\t// The order of exploration is determined by comparison with μ.\n\t\t\t// The sooner we find elements close to q, the smaller τ and the more nodes we skip.\n\t\t\t// P. Yianilos uses the middle of left/right bounds instead of μ.\n\t\t\tvar μ = node.μ, L = node.L, R = node.R;\n\t\t\tif(μ === undefined) return;\n\t\t\tif(dist < μ) {\n\t\t\t\tif(L && node.m - τ < dist) doSearch(L);\n\t\t\t\tif(R && μ - τ < dist && dist < node.M + τ) doSearch(R);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(R && dist < node.M + τ) doSearch(R);\n\t\t\t\tif(L && node.m - τ < dist && dist < μ + τ) doSearch(L);\n\t\t\t}\n\t\t}\n\n\t\tdoSearch(this.tree);\n\t\tthis.comparisons = comparisons;\n\t\treturn W.list();\n\t}\n\n\n\n\t/*───────────────────────────────────────────────────────────────────────────┐\n\t │   vp-tree constructor                                                     │\n\t └───────────────────────────────────────────────────────────────────────────*/\n\n\t/**\n\t * @constructor\n\t * @class VPTree manages a vp-tree.\n\t *\n\t * @param {Array} S the initial set of elements\n\t * @param {Function} distance the distance function\n\t * @param {Object} the vp-tree structure\n\t */\n\tfunction VPTree(S, distance, tree) {\n\t\tthis.S = S;\n\t\tthis.distance = distance;\n\t\tthis.tree = tree;\n\n\t\tthis.search = searchVPTree;\n\t\tthis.comparisons = 0;\n\t\tthis.stringify = stringify;\n\t}\n\n\n\texports.load = function(S, distance, tree) {\n\t\treturn new VPTree(S, distance, tree);\n\t}\n}));\n"},"lineCount":412}},"error":null,"hash":"9cafbe141ad6df32e3bfe37cf84e964e","cacheData":{"env":{}}}