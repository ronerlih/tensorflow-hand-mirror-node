{"id":"node_modules/compute-dot/lib/index.js","dependencies":[{"name":"/Users/ronerlih/development/tensorflow-hand-mirror-node/package.json","includedInParent":true,"mtime":1599520138964},{"name":"/Users/ronerlih/development/tensorflow-hand-mirror-node/.babelrc","includedInParent":true,"mtime":1599428702971},{"name":"/Users/ronerlih/development/tensorflow-hand-mirror-node/node_modules/compute-dot/package.json","includedInParent":true,"mtime":1599520112953},{"name":"validate.io-array","loc":{"line":5,"column":23},"parent":"/Users/ronerlih/development/tensorflow-hand-mirror-node/node_modules/compute-dot/lib/index.js","resolved":"/Users/ronerlih/development/tensorflow-hand-mirror-node/node_modules/validate.io-array/lib/index.js"},{"name":"validate.io-function","loc":{"line":6,"column":23},"parent":"/Users/ronerlih/development/tensorflow-hand-mirror-node/node_modules/compute-dot/lib/index.js","resolved":"/Users/ronerlih/development/tensorflow-hand-mirror-node/node_modules/validate.io-function/lib/index.js"}],"generated":{"js":"'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisFunction = require( 'validate.io-function' );\n\n\n// DOT PRODUCT //\n\n/**\n* FUNCTION: dot( x, y[, accessor] )\n*\tComputes the dot product between two arrays.\n*\n* @param {Array} x - input array\n* @param {Array} y - input array\n* @param {Function} [accessor] - accessor function for accessing array values\n* @returns {Number|Null} dot product\n*/\nfunction dot( x, y, clbk ) {\n\tif ( !isArray( x ) ) {\n\t\tthrow new TypeError( 'dot()::invalid input argument. First argument must be an array. Value: `' + x + '`.' );\n\t}\n\tif ( !isArray( y ) ) {\n\t\tthrow new TypeError( 'dot()::invalid input argument. Second argument must be an array. Value: `' + y + '`.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( 'dot()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.' );\n\t\t}\n\t}\n\tvar len = x.length,\n\t\tsum = 0,\n\t\ti;\n\n\tif ( len !== y.length ) {\n\t\tthrow new Error( 'dot()::invalid input argument. Arrays must be of equal length.' );\n\t}\n\tif ( !len ) {\n\t\treturn null;\n\t}\n\tif ( clbk ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tsum += clbk( x[ i ], i, 0 ) * clbk( y[ i ], i, 1 );\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tsum += x[ i ] * y[ i ];\n\t\t}\n\t}\n\treturn sum;\n} // end FUNCTION dot()\n\n\n// EXPORTS //\n\nmodule.exports = dot;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/compute-dot/lib/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/compute-dot/lib/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}}],"sources":{"node_modules/compute-dot/lib/index.js":"'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisFunction = require( 'validate.io-function' );\n\n\n// DOT PRODUCT //\n\n/**\n* FUNCTION: dot( x, y[, accessor] )\n*\tComputes the dot product between two arrays.\n*\n* @param {Array} x - input array\n* @param {Array} y - input array\n* @param {Function} [accessor] - accessor function for accessing array values\n* @returns {Number|Null} dot product\n*/\nfunction dot( x, y, clbk ) {\n\tif ( !isArray( x ) ) {\n\t\tthrow new TypeError( 'dot()::invalid input argument. First argument must be an array. Value: `' + x + '`.' );\n\t}\n\tif ( !isArray( y ) ) {\n\t\tthrow new TypeError( 'dot()::invalid input argument. Second argument must be an array. Value: `' + y + '`.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( 'dot()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.' );\n\t\t}\n\t}\n\tvar len = x.length,\n\t\tsum = 0,\n\t\ti;\n\n\tif ( len !== y.length ) {\n\t\tthrow new Error( 'dot()::invalid input argument. Arrays must be of equal length.' );\n\t}\n\tif ( !len ) {\n\t\treturn null;\n\t}\n\tif ( clbk ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tsum += clbk( x[ i ], i, 0 ) * clbk( y[ i ], i, 1 );\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tsum += x[ i ] * y[ i ];\n\t\t}\n\t}\n\treturn sum;\n} // end FUNCTION dot()\n\n\n// EXPORTS //\n\nmodule.exports = dot;\n"},"lineCount":58}},"error":null,"hash":"3ff38e64189d473c876b0049e9117b72","cacheData":{"env":{}}}