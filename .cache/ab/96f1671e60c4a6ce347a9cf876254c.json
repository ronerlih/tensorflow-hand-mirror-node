{"id":"node_modules/compute-cosine-similarity/lib/index.js","dependencies":[{"name":"/Users/ronerlih/development/tensorflow-hand-mirror-node/package.json","includedInParent":true,"mtime":1601076437187},{"name":"/Users/ronerlih/development/tensorflow-hand-mirror-node/.babelrc","includedInParent":true,"mtime":1599428702971},{"name":"/Users/ronerlih/development/tensorflow-hand-mirror-node/node_modules/compute-cosine-similarity/package.json","includedInParent":true,"mtime":1599520112952},{"name":"compute-dot","loc":{"line":5,"column":19},"parent":"/Users/ronerlih/development/tensorflow-hand-mirror-node/node_modules/compute-cosine-similarity/lib/index.js","resolved":"/Users/ronerlih/development/tensorflow-hand-mirror-node/node_modules/compute-dot/lib/index.js"},{"name":"compute-l2norm","loc":{"line":6,"column":19},"parent":"/Users/ronerlih/development/tensorflow-hand-mirror-node/node_modules/compute-cosine-similarity/lib/index.js","resolved":"/Users/ronerlih/development/tensorflow-hand-mirror-node/node_modules/compute-l2norm/lib/index.js"},{"name":"validate.io-array","loc":{"line":7,"column":20},"parent":"/Users/ronerlih/development/tensorflow-hand-mirror-node/node_modules/compute-cosine-similarity/lib/index.js","resolved":"/Users/ronerlih/development/tensorflow-hand-mirror-node/node_modules/validate.io-array/lib/index.js"},{"name":"validate.io-function","loc":{"line":8,"column":23},"parent":"/Users/ronerlih/development/tensorflow-hand-mirror-node/node_modules/compute-cosine-similarity/lib/index.js","resolved":"/Users/ronerlih/development/tensorflow-hand-mirror-node/node_modules/validate.io-function/lib/index.js"}],"generated":{"js":"'use strict';\n\n// MODULES //\n\nvar dot = require( 'compute-dot' ),\n\tl2norm = require( 'compute-l2norm' ),\n\tisArray = require( 'validate.io-array' ),\n\tisFunction = require( 'validate.io-function' );\n\n\n// FUNCTIONS //\n\n/**\n * FUNCTION: partial( fn, j )\n *\tPartially applied function from the right.\n *\n * @private\n * @param {Function} fn - input function\n * @param {Number} j - array index\n * @returns {Function} partially applied function\n */\nfunction partial( fn, j ) {\n\treturn function accessor( d, i ) {\n\t\treturn fn( d, i, j );\n\t};\n} // end FUNCTION partial()\n\n\n// COSINE SIMILARITY //\n\n/**\n* FUNCTION: similarity( x, y[, accessor] )\n*\tComputes the cosine similarity between two arrays.\n*\n* @param {Number[]|Array} x - input array\n* @param {Number[]|Array} y - input array\n* @param {Function} [accessor] - accessor function for accessing array values\n* @returns {Number|Null} cosine similarity or null\n*/\nfunction similarity( x, y, clbk ) {\n\tvar a, b, c;\n\tif ( !isArray( x ) ) {\n\t\tthrow new TypeError( 'cosine-similarity()::invalid input argument. First argument must be an array. Value: `' + x + '`.' );\n\t}\n\tif ( !isArray( y ) ) {\n\t\tthrow new TypeError( 'cosine-similarity()::invalid input argument. Second argument must be an array. Value: `' + y + '`.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( 'cosine-similarity()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.' );\n\t\t}\n\t}\n\tif ( x.length !== y.length ) {\n\t\tthrow new Error( 'cosine-similarity()::invalid input argument. Input arrays must have the same length.' );\n\t}\n\tif ( !x.length ) {\n\t\treturn null;\n\t}\n\tif ( clbk ) {\n\t\ta = dot( x, y, clbk );\n\t\tb = l2norm( x, partial( clbk, 0 ) );\n\t\tc = l2norm( y, partial( clbk, 1 ) );\n\t} else {\n\t\ta = dot( x, y );\n\t\tb = l2norm( x );\n\t\tc = l2norm( y );\n\t}\n\treturn a / ( b*c );\n} // end FUNCTION similarity()\n\n\n// EXPORTS //\n\nmodule.exports = similarity;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/compute-cosine-similarity/lib/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}}],"sources":{"node_modules/compute-cosine-similarity/lib/index.js":"'use strict';\n\n// MODULES //\n\nvar dot = require( 'compute-dot' ),\n\tl2norm = require( 'compute-l2norm' ),\n\tisArray = require( 'validate.io-array' ),\n\tisFunction = require( 'validate.io-function' );\n\n\n// FUNCTIONS //\n\n/**\n * FUNCTION: partial( fn, j )\n *\tPartially applied function from the right.\n *\n * @private\n * @param {Function} fn - input function\n * @param {Number} j - array index\n * @returns {Function} partially applied function\n */\nfunction partial( fn, j ) {\n\treturn function accessor( d, i ) {\n\t\treturn fn( d, i, j );\n\t};\n} // end FUNCTION partial()\n\n\n// COSINE SIMILARITY //\n\n/**\n* FUNCTION: similarity( x, y[, accessor] )\n*\tComputes the cosine similarity between two arrays.\n*\n* @param {Number[]|Array} x - input array\n* @param {Number[]|Array} y - input array\n* @param {Function} [accessor] - accessor function for accessing array values\n* @returns {Number|Null} cosine similarity or null\n*/\nfunction similarity( x, y, clbk ) {\n\tvar a, b, c;\n\tif ( !isArray( x ) ) {\n\t\tthrow new TypeError( 'cosine-similarity()::invalid input argument. First argument must be an array. Value: `' + x + '`.' );\n\t}\n\tif ( !isArray( y ) ) {\n\t\tthrow new TypeError( 'cosine-similarity()::invalid input argument. Second argument must be an array. Value: `' + y + '`.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( 'cosine-similarity()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.' );\n\t\t}\n\t}\n\tif ( x.length !== y.length ) {\n\t\tthrow new Error( 'cosine-similarity()::invalid input argument. Input arrays must have the same length.' );\n\t}\n\tif ( !x.length ) {\n\t\treturn null;\n\t}\n\tif ( clbk ) {\n\t\ta = dot( x, y, clbk );\n\t\tb = l2norm( x, partial( clbk, 0 ) );\n\t\tc = l2norm( y, partial( clbk, 1 ) );\n\t} else {\n\t\ta = dot( x, y );\n\t\tb = l2norm( x );\n\t\tc = l2norm( y );\n\t}\n\treturn a / ( b*c );\n} // end FUNCTION similarity()\n\n\n// EXPORTS //\n\nmodule.exports = similarity;\n"},"lineCount":75}},"error":null,"hash":"05e6186ad122b9502684d2cf7a7eea9f","cacheData":{"env":{}}}