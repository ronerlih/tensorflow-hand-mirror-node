{"id":"node_modules/opencv-build/build/getLibsFactory.js","dependencies":[{"name":"/Users/ronerlih/development/tensorflow-hand-mirror-node/package.json","includedInParent":true,"mtime":1601675144339},{"name":"/Users/ronerlih/development/tensorflow-hand-mirror-node/.babelrc","includedInParent":true,"mtime":1599428702971},{"name":"/Users/ronerlih/development/tensorflow-hand-mirror-node/node_modules/opencv-build/package.json","includedInParent":true,"mtime":1601674933833}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar worldModule = 'world';\r\nfunction getLibsFactory(args) {\r\n    var opencvModules = args.opencvModules, isWin = args.isWin, isOSX = args.isOSX, fs = args.fs, path = args.path;\r\n    function getLibPrefix() {\r\n        return isWin() ? 'opencv_' : 'libopencv_';\r\n    }\r\n    function getLibSuffix() {\r\n        return isWin() ? 'lib' : (isOSX() ? 'dylib' : 'so');\r\n    }\r\n    function getLibNameRegex(opencvModuleName) {\r\n        return new RegExp(\"^\" + getLibPrefix() + opencvModuleName + \"[0-9]{0,3}.\" + getLibSuffix() + \"$\");\r\n    }\r\n    function createLibResolver(libDir) {\r\n        function getLibAbsPath(libFile) {\r\n            return (libFile\r\n                ? fs.realpathSync(path.resolve(libDir, libFile))\r\n                : undefined);\r\n        }\r\n        function matchLibName(libFile, opencvModuleName) {\r\n            return !!(libFile.match(getLibNameRegex(opencvModuleName)) || [])[0];\r\n        }\r\n        var libFiles = fs.readdirSync(libDir);\r\n        return function (opencvModuleName) {\r\n            return getLibAbsPath(libFiles.find(function (libFile) { return matchLibName(libFile, opencvModuleName); }));\r\n        };\r\n    }\r\n    return function (libDir) {\r\n        if (!fs.existsSync(libDir)) {\r\n            throw new Error(\"specified lib dir does not exist: \" + libDir);\r\n        }\r\n        var resolveLib = createLibResolver(libDir);\r\n        var worldLibPath = resolveLib(worldModule);\r\n        if (worldLibPath) {\r\n            return [{\r\n                    opencvModule: worldModule,\r\n                    libPath: worldLibPath\r\n                }];\r\n        }\r\n        return opencvModules.map(function (opencvModule) { return ({\r\n            opencvModule: opencvModule,\r\n            libPath: resolveLib(opencvModule)\r\n        }); });\r\n    };\r\n}\r\nexports.getLibsFactory = getLibsFactory;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/opencv-build/build/getLibsFactory.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}}],"sources":{"node_modules/opencv-build/build/getLibsFactory.js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar worldModule = 'world';\r\nfunction getLibsFactory(args) {\r\n    var opencvModules = args.opencvModules, isWin = args.isWin, isOSX = args.isOSX, fs = args.fs, path = args.path;\r\n    function getLibPrefix() {\r\n        return isWin() ? 'opencv_' : 'libopencv_';\r\n    }\r\n    function getLibSuffix() {\r\n        return isWin() ? 'lib' : (isOSX() ? 'dylib' : 'so');\r\n    }\r\n    function getLibNameRegex(opencvModuleName) {\r\n        return new RegExp(\"^\" + getLibPrefix() + opencvModuleName + \"[0-9]{0,3}.\" + getLibSuffix() + \"$\");\r\n    }\r\n    function createLibResolver(libDir) {\r\n        function getLibAbsPath(libFile) {\r\n            return (libFile\r\n                ? fs.realpathSync(path.resolve(libDir, libFile))\r\n                : undefined);\r\n        }\r\n        function matchLibName(libFile, opencvModuleName) {\r\n            return !!(libFile.match(getLibNameRegex(opencvModuleName)) || [])[0];\r\n        }\r\n        var libFiles = fs.readdirSync(libDir);\r\n        return function (opencvModuleName) {\r\n            return getLibAbsPath(libFiles.find(function (libFile) { return matchLibName(libFile, opencvModuleName); }));\r\n        };\r\n    }\r\n    return function (libDir) {\r\n        if (!fs.existsSync(libDir)) {\r\n            throw new Error(\"specified lib dir does not exist: \" + libDir);\r\n        }\r\n        var resolveLib = createLibResolver(libDir);\r\n        var worldLibPath = resolveLib(worldModule);\r\n        if (worldLibPath) {\r\n            return [{\r\n                    opencvModule: worldModule,\r\n                    libPath: worldLibPath\r\n                }];\r\n        }\r\n        return opencvModules.map(function (opencvModule) { return ({\r\n            opencvModule: opencvModule,\r\n            libPath: resolveLib(opencvModule)\r\n        }); });\r\n    };\r\n}\r\nexports.getLibsFactory = getLibsFactory;\r\n"},"lineCount":48}},"error":null,"hash":"adc45b34e65c804b27c09e1f116c24bd","cacheData":{"env":{}}}