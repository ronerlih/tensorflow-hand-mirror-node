{"id":"node_modules/opencv4nodejs/lib/promisify.js","dependencies":[{"name":"/Users/ronerlih/development/tensorflow-hand-mirror-node/package.json","includedInParent":true,"mtime":1601675144339},{"name":"/Users/ronerlih/development/tensorflow-hand-mirror-node/.babelrc","includedInParent":true,"mtime":1599428702971},{"name":"/Users/ronerlih/development/tensorflow-hand-mirror-node/node_modules/opencv4nodejs/package.json","includedInParent":true,"mtime":1601674933748}],"generated":{"js":"const isFn = obj => typeof obj === 'function';\r\nconst isAsyncFn = fn => fn.prototype.constructor.name.endsWith('Async');\r\n\r\nconst promisify = (fn) => function () {\r\n  if (isFn(arguments[arguments.length - 1])) {\r\n    return fn.apply(this, arguments);\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const args = Array.prototype.slice.call(arguments);\r\n    args.push(function(err, res) {\r\n      if (err) {\r\n        return reject(err);\r\n      }\r\n      return resolve(res);\r\n    });\r\n\r\n    fn.apply(this, args);\r\n  });\r\n};\r\n\r\nmodule.exports = (cv) => {\r\n  const fns = Object.keys(cv).filter(k => isFn(cv[k])).map(k => cv[k]);\r\n  const asyncFuncs = fns.filter(isAsyncFn);\r\n  const clazzes = fns.filter(fn => !!Object.keys(fn.prototype).length);\r\n\r\n  clazzes.forEach((clazz) => {\r\n    const protoFnKeys = Object.keys(clazz.prototype).filter(k => isAsyncFn(clazz.prototype[k]));\r\n    protoFnKeys.forEach(k => clazz.prototype[k] = promisify(clazz.prototype[k]));\r\n  });\r\n\r\n  asyncFuncs.forEach((fn) => {\r\n    cv[fn.prototype.constructor.name] = promisify(fn);\r\n  });\r\n\r\n  return cv;\r\n};"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/opencv4nodejs/lib/promisify.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}}],"sources":{"node_modules/opencv4nodejs/lib/promisify.js":"const isFn = obj => typeof obj === 'function';\r\nconst isAsyncFn = fn => fn.prototype.constructor.name.endsWith('Async');\r\n\r\nconst promisify = (fn) => function () {\r\n  if (isFn(arguments[arguments.length - 1])) {\r\n    return fn.apply(this, arguments);\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const args = Array.prototype.slice.call(arguments);\r\n    args.push(function(err, res) {\r\n      if (err) {\r\n        return reject(err);\r\n      }\r\n      return resolve(res);\r\n    });\r\n\r\n    fn.apply(this, args);\r\n  });\r\n};\r\n\r\nmodule.exports = (cv) => {\r\n  const fns = Object.keys(cv).filter(k => isFn(cv[k])).map(k => cv[k]);\r\n  const asyncFuncs = fns.filter(isAsyncFn);\r\n  const clazzes = fns.filter(fn => !!Object.keys(fn.prototype).length);\r\n\r\n  clazzes.forEach((clazz) => {\r\n    const protoFnKeys = Object.keys(clazz.prototype).filter(k => isAsyncFn(clazz.prototype[k]));\r\n    protoFnKeys.forEach(k => clazz.prototype[k] = promisify(clazz.prototype[k]));\r\n  });\r\n\r\n  asyncFuncs.forEach((fn) => {\r\n    cv[fn.prototype.constructor.name] = promisify(fn);\r\n  });\r\n\r\n  return cv;\r\n};"},"lineCount":37}},"error":null,"hash":"aa320d5db4a417f89f899cc164a7514a","cacheData":{"env":{}}}