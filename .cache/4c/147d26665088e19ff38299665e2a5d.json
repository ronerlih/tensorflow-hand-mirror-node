{"id":"utils/findSimilarVideo.js","dependencies":[{"name":"/Users/ronerlih/development/tensorflow-hand-mirror-node/.babelrc","includedInParent":true,"mtime":1599428702971},{"name":"/Users/ronerlih/development/tensorflow-hand-mirror-node/package.json","includedInParent":true,"mtime":1601675144339},{"name":"compute-cosine-similarity","loc":{"line":1,"column":27},"parent":"/Users/ronerlih/development/tensorflow-hand-mirror-node/utils/findSimilarVideo.js","resolved":"/Users/ronerlih/development/tensorflow-hand-mirror-node/node_modules/compute-cosine-similarity/lib/index.js"},{"name":"vptree","loc":{"line":2,"column":30},"parent":"/Users/ronerlih/development/tensorflow-hand-mirror-node/utils/findSimilarVideo.js","resolved":"/Users/ronerlih/development/tensorflow-hand-mirror-node/node_modules/vptree/vptree.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildVPTree = buildVPTree;\nexports.findSimilar = findSimilar;\n\nconst similarity = require('compute-cosine-similarity');\n\nconst VPTreeFactory = require('vptree'); // const poseData = [ […], […], […], …] // an array with all the images’ pose data\n\n\nlet vptree; // where we’ll store a reference to our vptree\n// Build the tree once\n\nfunction buildVPTree(poseData) {\n  // Initialize our vptree with our images’ pose data and a distance function\n  vptree = VPTreeFactory.build(poseData, cosineDistanceMatching);\n} // Function from the previous section covering cosine distance\n\n\nfunction cosineDistanceMatching(poseVector1, poseVector2) {\n  let cosineSimilarity = similarity(poseVector1, poseVector2);\n  let distance = 2 * (1 - cosineSimilarity);\n  return Math.sqrt(distance);\n}\n\nfunction findSimilar(currentUserPose) {\n  function findMostSimilarMatch(userPose) {\n    // search the vp tree for the image pose that is nearest (in cosine distance) to userPose\n    let nearestImage = vptree.search(userPose); // console.log(nearestImage[0].d) // cosine distance value of the nearest match\n    // return index (in relation to poseData) of nearest match. \n\n    return nearestImage[0].i;\n  } // Then for each input user pose\n  // let currentUserPose = [...] // an L2 normalized vector representing a user pose. 34-float array (17 keypoints x 2).  \n\n\n  let closestMatchIndex = findMostSimilarMatch(currentUserPose); // let closestMatchIndex = findMostSimilarTenMatches(currentUserPose);\n  // let closestMatch = poseData[closestMatchIndex];\n  // console.log(closestMatch);\n\n  return closestMatchIndex;\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":9,"column":0},"source":"utils/findSimilarVideo.js","original":{"line":1,"column":0}},{"name":"similarity","generated":{"line":9,"column":6},"source":"utils/findSimilarVideo.js","original":{"line":1,"column":6}},{"generated":{"line":9,"column":16},"source":"utils/findSimilarVideo.js","original":{"line":1,"column":16}},{"name":"require","generated":{"line":9,"column":19},"source":"utils/findSimilarVideo.js","original":{"line":1,"column":19}},{"generated":{"line":9,"column":26},"source":"utils/findSimilarVideo.js","original":{"line":1,"column":26}},{"generated":{"line":9,"column":27},"source":"utils/findSimilarVideo.js","original":{"line":1,"column":27}},{"generated":{"line":9,"column":54},"source":"utils/findSimilarVideo.js","original":{"line":1,"column":26}},{"generated":{"line":9,"column":55},"source":"utils/findSimilarVideo.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"utils/findSimilarVideo.js","original":{"line":2,"column":0}},{"name":"VPTreeFactory","generated":{"line":11,"column":6},"source":"utils/findSimilarVideo.js","original":{"line":2,"column":6}},{"generated":{"line":11,"column":19},"source":"utils/findSimilarVideo.js","original":{"line":2,"column":19}},{"name":"require","generated":{"line":11,"column":22},"source":"utils/findSimilarVideo.js","original":{"line":2,"column":22}},{"generated":{"line":11,"column":29},"source":"utils/findSimilarVideo.js","original":{"line":2,"column":29}},{"generated":{"line":11,"column":30},"source":"utils/findSimilarVideo.js","original":{"line":2,"column":30}},{"generated":{"line":11,"column":38},"source":"utils/findSimilarVideo.js","original":{"line":2,"column":29}},{"generated":{"line":11,"column":39},"source":"utils/findSimilarVideo.js","original":{"line":2,"column":0}},{"generated":{"line":11,"column":41},"source":"utils/findSimilarVideo.js","original":{"line":4,"column":0}},{"generated":{"line":14,"column":0},"source":"utils/findSimilarVideo.js","original":{"line":5,"column":0}},{"name":"vptree","generated":{"line":14,"column":4},"source":"utils/findSimilarVideo.js","original":{"line":5,"column":4}},{"generated":{"line":14,"column":10},"source":"utils/findSimilarVideo.js","original":{"line":5,"column":0}},{"generated":{"line":14,"column":12},"source":"utils/findSimilarVideo.js","original":{"line":5,"column":13}},{"generated":{"line":15,"column":0},"source":"utils/findSimilarVideo.js","original":{"line":7,"column":0}},{"generated":{"line":17,"column":0},"source":"utils/findSimilarVideo.js","original":{"line":8,"column":7}},{"name":"buildVPTree","generated":{"line":17,"column":9},"source":"utils/findSimilarVideo.js","original":{"line":8,"column":16}},{"generated":{"line":17,"column":20},"source":"utils/findSimilarVideo.js","original":{"line":8,"column":7}},{"name":"poseData","generated":{"line":17,"column":21},"source":"utils/findSimilarVideo.js","original":{"line":8,"column":28}},{"generated":{"line":17,"column":29},"source":"utils/findSimilarVideo.js","original":{"line":8,"column":7}},{"generated":{"line":17,"column":31},"source":"utils/findSimilarVideo.js","original":{"line":8,"column":38}},{"generated":{"line":18,"column":0},"source":"utils/findSimilarVideo.js","original":{"line":9,"column":3}},{"name":"vptree","generated":{"line":19,"column":0},"source":"utils/findSimilarVideo.js","original":{"line":10,"column":3}},{"name":"vptree","generated":{"line":19,"column":2},"source":"utils/findSimilarVideo.js","original":{"line":10,"column":3}},{"generated":{"line":19,"column":8},"source":"utils/findSimilarVideo.js","original":{"line":10,"column":9}},{"name":"VPTreeFactory","generated":{"line":19,"column":11},"source":"utils/findSimilarVideo.js","original":{"line":10,"column":12}},{"generated":{"line":19,"column":24},"source":"utils/findSimilarVideo.js","original":{"line":10,"column":25}},{"name":"build","generated":{"line":19,"column":25},"source":"utils/findSimilarVideo.js","original":{"line":10,"column":26}},{"generated":{"line":19,"column":30},"source":"utils/findSimilarVideo.js","original":{"line":10,"column":12}},{"name":"poseData","generated":{"line":19,"column":31},"source":"utils/findSimilarVideo.js","original":{"line":10,"column":32}},{"generated":{"line":19,"column":39},"source":"utils/findSimilarVideo.js","original":{"line":10,"column":12}},{"name":"cosineDistanceMatching","generated":{"line":19,"column":41},"source":"utils/findSimilarVideo.js","original":{"line":10,"column":42}},{"generated":{"line":19,"column":63},"source":"utils/findSimilarVideo.js","original":{"line":10,"column":12}},{"generated":{"line":19,"column":64},"source":"utils/findSimilarVideo.js","original":{"line":10,"column":3}},{"generated":{"line":20,"column":0},"source":"utils/findSimilarVideo.js","original":{"line":11,"column":2}},{"generated":{"line":20,"column":2},"source":"utils/findSimilarVideo.js","original":{"line":12,"column":3}},{"generated":{"line":23,"column":0},"source":"utils/findSimilarVideo.js","original":{"line":13,"column":3}},{"name":"cosineDistanceMatching","generated":{"line":23,"column":9},"source":"utils/findSimilarVideo.js","original":{"line":13,"column":12}},{"generated":{"line":23,"column":31},"source":"utils/findSimilarVideo.js","original":{"line":13,"column":3}},{"name":"poseVector1","generated":{"line":23,"column":32},"source":"utils/findSimilarVideo.js","original":{"line":13,"column":35}},{"generated":{"line":23,"column":43},"source":"utils/findSimilarVideo.js","original":{"line":13,"column":3}},{"name":"poseVector2","generated":{"line":23,"column":45},"source":"utils/findSimilarVideo.js","original":{"line":13,"column":48}},{"generated":{"line":23,"column":56},"source":"utils/findSimilarVideo.js","original":{"line":13,"column":3}},{"generated":{"line":23,"column":58},"source":"utils/findSimilarVideo.js","original":{"line":13,"column":61}},{"generated":{"line":24,"column":0},"source":"utils/findSimilarVideo.js","original":{"line":14,"column":3}},{"name":"cosineSimilarity","generated":{"line":24,"column":6},"source":"utils/findSimilarVideo.js","original":{"line":14,"column":7}},{"generated":{"line":24,"column":22},"source":"utils/findSimilarVideo.js","original":{"line":14,"column":23}},{"name":"similarity","generated":{"line":24,"column":25},"source":"utils/findSimilarVideo.js","original":{"line":14,"column":26}},{"generated":{"line":24,"column":35},"source":"utils/findSimilarVideo.js","original":{"line":14,"column":36}},{"name":"poseVector1","generated":{"line":24,"column":36},"source":"utils/findSimilarVideo.js","original":{"line":14,"column":37}},{"generated":{"line":24,"column":47},"source":"utils/findSimilarVideo.js","original":{"line":14,"column":36}},{"name":"poseVector2","generated":{"line":24,"column":49},"source":"utils/findSimilarVideo.js","original":{"line":14,"column":50}},{"generated":{"line":24,"column":60},"source":"utils/findSimilarVideo.js","original":{"line":14,"column":36}},{"generated":{"line":24,"column":61},"source":"utils/findSimilarVideo.js","original":{"line":14,"column":3}},{"generated":{"line":25,"column":0},"source":"utils/findSimilarVideo.js","original":{"line":15,"column":3}},{"name":"distance","generated":{"line":25,"column":6},"source":"utils/findSimilarVideo.js","original":{"line":15,"column":7}},{"generated":{"line":25,"column":14},"source":"utils/findSimilarVideo.js","original":{"line":15,"column":15}},{"generated":{"line":25,"column":17},"source":"utils/findSimilarVideo.js","original":{"line":15,"column":18}},{"generated":{"line":25,"column":22},"source":"utils/findSimilarVideo.js","original":{"line":15,"column":23}},{"name":"cosineSimilarity","generated":{"line":25,"column":26},"source":"utils/findSimilarVideo.js","original":{"line":15,"column":27}},{"generated":{"line":25,"column":42},"source":"utils/findSimilarVideo.js","original":{"line":15,"column":18}},{"generated":{"line":25,"column":43},"source":"utils/findSimilarVideo.js","original":{"line":15,"column":3}},{"generated":{"line":26,"column":0},"source":"utils/findSimilarVideo.js","original":{"line":16,"column":3}},{"name":"Math","generated":{"line":26,"column":9},"source":"utils/findSimilarVideo.js","original":{"line":16,"column":10}},{"generated":{"line":26,"column":13},"source":"utils/findSimilarVideo.js","original":{"line":16,"column":14}},{"name":"sqrt","generated":{"line":26,"column":14},"source":"utils/findSimilarVideo.js","original":{"line":16,"column":15}},{"generated":{"line":26,"column":18},"source":"utils/findSimilarVideo.js","original":{"line":16,"column":10}},{"name":"distance","generated":{"line":26,"column":19},"source":"utils/findSimilarVideo.js","original":{"line":16,"column":20}},{"generated":{"line":26,"column":27},"source":"utils/findSimilarVideo.js","original":{"line":16,"column":10}},{"generated":{"line":26,"column":28},"source":"utils/findSimilarVideo.js","original":{"line":16,"column":3}},{"generated":{"line":27,"column":0},"source":"utils/findSimilarVideo.js","original":{"line":17,"column":1}},{"generated":{"line":29,"column":0},"source":"utils/findSimilarVideo.js","original":{"line":18,"column":7}},{"name":"findSimilar","generated":{"line":29,"column":9},"source":"utils/findSimilarVideo.js","original":{"line":18,"column":16}},{"generated":{"line":29,"column":20},"source":"utils/findSimilarVideo.js","original":{"line":18,"column":7}},{"name":"currentUserPose","generated":{"line":29,"column":21},"source":"utils/findSimilarVideo.js","original":{"line":18,"column":29}},{"generated":{"line":29,"column":36},"source":"utils/findSimilarVideo.js","original":{"line":18,"column":7}},{"generated":{"line":29,"column":38},"source":"utils/findSimilarVideo.js","original":{"line":18,"column":46}},{"generated":{"line":30,"column":0},"source":"utils/findSimilarVideo.js","original":{"line":21,"column":3}},{"name":"findMostSimilarMatch","generated":{"line":30,"column":11},"source":"utils/findSimilarVideo.js","original":{"line":21,"column":12}},{"generated":{"line":30,"column":31},"source":"utils/findSimilarVideo.js","original":{"line":21,"column":3}},{"name":"userPose","generated":{"line":30,"column":32},"source":"utils/findSimilarVideo.js","original":{"line":21,"column":33}},{"generated":{"line":30,"column":40},"source":"utils/findSimilarVideo.js","original":{"line":21,"column":3}},{"generated":{"line":30,"column":42},"source":"utils/findSimilarVideo.js","original":{"line":21,"column":43}},{"generated":{"line":31,"column":0},"source":"utils/findSimilarVideo.js","original":{"line":22,"column":5}},{"generated":{"line":32,"column":0},"source":"utils/findSimilarVideo.js","original":{"line":23,"column":5}},{"name":"nearestImage","generated":{"line":32,"column":8},"source":"utils/findSimilarVideo.js","original":{"line":23,"column":9}},{"generated":{"line":32,"column":20},"source":"utils/findSimilarVideo.js","original":{"line":23,"column":21}},{"name":"vptree","generated":{"line":32,"column":23},"source":"utils/findSimilarVideo.js","original":{"line":23,"column":24}},{"generated":{"line":32,"column":29},"source":"utils/findSimilarVideo.js","original":{"line":23,"column":30}},{"name":"search","generated":{"line":32,"column":30},"source":"utils/findSimilarVideo.js","original":{"line":23,"column":31}},{"generated":{"line":32,"column":36},"source":"utils/findSimilarVideo.js","original":{"line":23,"column":24}},{"name":"userPose","generated":{"line":32,"column":37},"source":"utils/findSimilarVideo.js","original":{"line":23,"column":38}},{"generated":{"line":32,"column":45},"source":"utils/findSimilarVideo.js","original":{"line":23,"column":24}},{"generated":{"line":32,"column":46},"source":"utils/findSimilarVideo.js","original":{"line":23,"column":5}},{"generated":{"line":32,"column":47},"source":"utils/findSimilarVideo.js","original":{"line":21,"column":43}},{"generated":{"line":32,"column":48},"source":"utils/findSimilarVideo.js","original":{"line":24,"column":5}},{"generated":{"line":33,"column":0},"source":"utils/findSimilarVideo.js","original":{"line":25,"column":5}},{"generated":{"line":35,"column":0},"source":"utils/findSimilarVideo.js","original":{"line":26,"column":5}},{"name":"nearestImage","generated":{"line":35,"column":11},"source":"utils/findSimilarVideo.js","original":{"line":26,"column":12}},{"generated":{"line":35,"column":23},"source":"utils/findSimilarVideo.js","original":{"line":26,"column":24}},{"generated":{"line":35,"column":24},"source":"utils/findSimilarVideo.js","original":{"line":26,"column":25}},{"generated":{"line":35,"column":25},"source":"utils/findSimilarVideo.js","original":{"line":26,"column":24}},{"generated":{"line":35,"column":26},"source":"utils/findSimilarVideo.js","original":{"line":26,"column":12}},{"name":"i","generated":{"line":35,"column":27},"source":"utils/findSimilarVideo.js","original":{"line":26,"column":28}},{"generated":{"line":35,"column":28},"source":"utils/findSimilarVideo.js","original":{"line":26,"column":5}},{"generated":{"line":36,"column":0},"source":"utils/findSimilarVideo.js","original":{"line":27,"column":4}},{"generated":{"line":36,"column":3},"source":"utils/findSimilarVideo.js","original":{"line":18,"column":46}},{"generated":{"line":36,"column":4},"source":"utils/findSimilarVideo.js","original":{"line":29,"column":3}},{"generated":{"line":37,"column":0},"source":"utils/findSimilarVideo.js","original":{"line":30,"column":3}},{"generated":{"line":40,"column":0},"source":"utils/findSimilarVideo.js","original":{"line":31,"column":3}},{"name":"closestMatchIndex","generated":{"line":40,"column":6},"source":"utils/findSimilarVideo.js","original":{"line":31,"column":7}},{"generated":{"line":40,"column":23},"source":"utils/findSimilarVideo.js","original":{"line":31,"column":24}},{"name":"findMostSimilarMatch","generated":{"line":40,"column":26},"source":"utils/findSimilarVideo.js","original":{"line":31,"column":27}},{"generated":{"line":40,"column":46},"source":"utils/findSimilarVideo.js","original":{"line":31,"column":47}},{"name":"currentUserPose","generated":{"line":40,"column":47},"source":"utils/findSimilarVideo.js","original":{"line":31,"column":48}},{"generated":{"line":40,"column":62},"source":"utils/findSimilarVideo.js","original":{"line":31,"column":47}},{"generated":{"line":40,"column":63},"source":"utils/findSimilarVideo.js","original":{"line":31,"column":3}},{"generated":{"line":40,"column":64},"source":"utils/findSimilarVideo.js","original":{"line":18,"column":46}},{"generated":{"line":40,"column":65},"source":"utils/findSimilarVideo.js","original":{"line":32,"column":3}},{"generated":{"line":41,"column":0},"source":"utils/findSimilarVideo.js","original":{"line":33,"column":3}},{"generated":{"line":42,"column":0},"source":"utils/findSimilarVideo.js","original":{"line":35,"column":3}},{"generated":{"line":44,"column":0},"source":"utils/findSimilarVideo.js","original":{"line":36,"column":3}},{"name":"closestMatchIndex","generated":{"line":44,"column":9},"source":"utils/findSimilarVideo.js","original":{"line":36,"column":10}},{"generated":{"line":44,"column":26},"source":"utils/findSimilarVideo.js","original":{"line":36,"column":3}},{"generated":{"line":45,"column":0},"source":"utils/findSimilarVideo.js","original":{"line":37,"column":1}}],"sources":{"utils/findSimilarVideo.js":"const similarity = require('compute-cosine-similarity');\nconst VPTreeFactory = require('vptree');\n\n// const poseData = [ […], […], […], …] // an array with all the images’ pose data\nlet vptree ; // where we’ll store a reference to our vptree\n   \n// Build the tree once\nexport function buildVPTree(poseData) {\n   // Initialize our vptree with our images’ pose data and a distance function\n   vptree = VPTreeFactory.build(poseData, cosineDistanceMatching);\n }\n   // Function from the previous section covering cosine distance\n   function cosineDistanceMatching(poseVector1, poseVector2) {\n   let cosineSimilarity = similarity(poseVector1, poseVector2);\n   let distance = 2 * (1 - cosineSimilarity);\n   return Math.sqrt(distance);\n}\nexport function findSimilar (currentUserPose) {\n   \n \n   function findMostSimilarMatch(userPose) {\n     // search the vp tree for the image pose that is nearest (in cosine distance) to userPose\n     let nearestImage = vptree.search(userPose);\n     // console.log(nearestImage[0].d) // cosine distance value of the nearest match\n     // return index (in relation to poseData) of nearest match. \n     return nearestImage[0].i; \n   }\n\n   // Then for each input user pose\n   // let currentUserPose = [...] // an L2 normalized vector representing a user pose. 34-float array (17 keypoints x 2).  \n   let closestMatchIndex = findMostSimilarMatch(currentUserPose);\n   // let closestMatchIndex = findMostSimilarTenMatches(currentUserPose);\n   // let closestMatch = poseData[closestMatchIndex];\n   \n   // console.log(closestMatch);\n   return closestMatchIndex;\n}"},"lineCount":null}},"error":null,"hash":"cac5e7ec96fb84b65c63957d7e7db049","cacheData":{"env":{}}}