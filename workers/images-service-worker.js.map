{"version":3,"sources":["workers/images-service-worker.js"],"names":["FILES_TO_CACHE","CACHE_NAME","DATA_CACHE_NAME","self","addEventListener","evt","waitUntil","caches","open","then","cache","console","log","addAll","skipWaiting","keys","keyList","Promise","all","map","key","delete","clients","claim","request","url","includes","respondWith","fetch","response","status","put","clone","catch","err","match","event"],"mappings":"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","file":"images-service-worker.js","sourceRoot":"..","sourcesContent":["\nconst FILES_TO_CACHE = [\n   \"/\",\n   \"/index.html\",\n   \"/assets/css/style.css\",\n   \"/assets/js/loadPosts.js\",\n   \"/assets/images/Angular-icon.png\",\n   \"/assets/images/React-icon.png\",\n   \"/assets/images/Vue.js-icon.png\",\n   \"/manifest.webmanifest\",\n   \"/favicon.ico\",\n   \"/assets/images/icons/icon-72x72.png\",\n   \"/assets/images/icons/icon-96x96.png\",\n   \"/assets/images/icons/icon-128x128.png\",\n   \"/assets/images/icons/icon-144x144.png\",\n   \"/assets/images/icons/icon-152x152.png\",\n   \"/assets/images/icons/icon-192x192.png\",\n   \"/assets/images/icons/icon-384x384.png\",\n   \"/assets/images/icons/icon-512x512.png\",\n ];\n \n const CACHE_NAME = \"static-cache-v2\";\n const DATA_CACHE_NAME = \"data-cache-v1\";\n \n // install\n self.addEventListener(\"install\", function(evt) {\n\n   \n   evt.waitUntil(\n      caches.open(CACHE_NAME).then(cache => {\n         console.log(\"Your files were pre-cached successfully!\");\n         return cache.addAll(FILES_TO_CACHE);\n       })\n     \n   );\n \n   self.skipWaiting();\n });\n \n self.addEventListener(\"activate\", function(evt) {\n   evt.waitUntil(\n     caches.keys().then(keyList => {\n       return Promise.all(\n         keyList.map(key => {\n           if (key !== CACHE_NAME && key !== DATA_CACHE_NAME) {\n             console.log(\"Removing old cache data\", key);\n             return caches.delete(key);\n           }\n         })\n       );\n     })\n   );\n \n   self.clients.claim();\n });\n \n // fetch\n self.addEventListener(\"fetch\", function(evt) {\n    console.log('fetch')\n   // cache successful requests to the API\n   if (evt.request.url.includes(\".jpg\")) {\n     evt.respondWith(\n       caches.open(DATA_CACHE_NAME).then(cache => {\n          console.log('getting', evt.request.url)\n         return fetch(evt.request)\n           .then(response => {\n             // If the response was good, clone it and store it in the cache.\n             if (response.status === 200) {\n               cache.put(evt.request.url, response.clone());\n             }\n \n             return response;\n           })\n           .catch(err => {\n             // Network request failed, try to get it from the cache.\n             return cache.match(evt.request);\n           });\n       }).catch(err => console.log(err))\n     );\n \n     return;\n   }\n \n   // if the request is not for the API, serve static assets using \"offline-first\" approach.\n   // see https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook#cache-falling-back-to-network\n   evt.respondWith(\n     caches.match(evt.request).then(function(response) {\n         console.log('respond with ', evt.request.url)\n         return response || fetch(evt.request);\n     })\n   );\n });\n\n // in the service worker\n self.addEventListener('message', event => {\n   // event is an ExtendableMessageEvent object\n   // console.log(`client sent to worker: ${event.data}`);\n });"]}